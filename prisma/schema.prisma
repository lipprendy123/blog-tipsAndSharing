// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum RoleUser {
  admin
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  role      RoleUser @default(admin)

  posts     Post[]
  session   Session[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Session {
  id        String   @id
  userId    Int
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  content     String   @db.Text
  images      String   @db.VarChar(255)
  published   Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  authorName      String   @db.VarChar(255)
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
}

model Category {
   id                    Int      @id @default(autoincrement())
   name                  String   @db.VarBit(255)
   category_images       String   @db.VarChar(255)
   post                  Post[]
   created_at            DateTime @default(now())
   updated_at            DateTime @updatedAt
}